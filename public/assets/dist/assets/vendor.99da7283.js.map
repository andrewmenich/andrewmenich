{"version":3,"file":"vendor.99da7283.js","sources":["../../../../node_modules/alpinejs/dist/alpine.js","../../../../node_modules/focus-visible/dist/focus-visible.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function checkedAttrLooseCompare(valueA, valueB) {\n    return valueA == valueB;\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const handleError = (el, expression, error) => {\n    console.warn(`Alpine Error: \"${error}\"\\n\\nExpression: \"${expression}\"\\nElement:`, el);\n\n    if (!isTesting()) {\n      Object.assign(error, {\n        el,\n        expression\n      });\n      throw error;\n    }\n  };\n\n  function tryCatch(cb, {\n    el,\n    expression\n  }) {\n    try {\n      const value = cb();\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\n    } catch (e) {\n      handleError(el, expression, e);\n    }\n  }\n\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return expression.call(dataContext);\n      }\n\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n    }, {\n      el,\n      expression\n    });\n  }\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n      }\n\n      let AsyncFunction = Function;\n      /* MODERN-ONLY:START */\n\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n      /* MODERN-ONLY:END */\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n      // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n      if (Object.keys(dataContext).includes(expression)) {\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n        if (typeof methodReference === 'function') {\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n    }, {\n      el,\n      expression\n    });\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  const TRANSITION_CANCELLED = 'cancelled';\n  function transitionIn(el, show, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show, reject);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide, reject);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n\n  const ensureStringExpression = (expression, el, component) => {\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n  };\n\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression, el, component));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression, el, component));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n  function transition(el, stages, type, reject) {\n    const finish = once(() => {\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\n      // removed the element from the DOM.\n\n      if (el.isConnected) {\n        stages.cleanup();\n      }\n\n      delete el.__x_transition;\n    });\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      cancel: once(() => {\n        reject(TRANSITION_CANCELLED);\n        finish();\n      }),\n      finish,\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.finish, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !Array.isArray(subject) && !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = String(expression).match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\n\n    if (isNumeric(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    return items;\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\n\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, () => {}, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && String(expression).match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = checkedAttrLooseCompare(el.value, value);\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\n          el.value = String(value);\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value ? convertClassStringToArray(value) : [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && String(expression).match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n      el.__x_is_shown = false;\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n\n      el.__x_is_shown = true;\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = (resolve, reject) => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, reject, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, reject, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish(), () => {});\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, () => {}, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    let handler, listenerTarget;\n\n    if (modifiers.includes('away')) {\n      listenerTarget = document;\n\n      handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      };\n    } else {\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n    }\n\n    if (modifiers.includes('debounce')) {\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n      handler = debounce(handler, wait);\n    }\n\n    listenerTarget.addEventListener(event, handler, options);\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n      /* MODERN-ONLY:START */\n      // We remove this piece of code from the legacy build.\n      // In IE11, we have already defined our helpers at this point.\n      // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference, this.$el);\n          }\n        });\n      });\n      /* MODERN-ONLY:END */\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n      // If we're cloning a component, the third parameter ensures no duplicate\n      // event listeners are registered (the mutation observer will take care of them)\n\n\n      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars, componentForClone ? false : true);\n      }, el => {\n        if (!componentForClone) el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(handler => {\n        return new Promise((resolve, reject) => {\n          handler(resolve, reject);\n        });\n      }).reduce((promiseChain, promise) => {\n        return promiseChain.then(() => {\n          return promise.then(finishElement => {\n            finishElement();\n          });\n        });\n      }, Promise.resolve(() => {})).catch(e => {\n        if (e !== TRANSITION_CANCELLED) throw e;\n      }); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\n            const rawData = saferEval(this.$el, xAttr, {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.8.2\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime();\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n\n    var inputTypesAllowlist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n    function isValidFocusTarget(el) {\n      if (\n        el &&\n        el !== document &&\n        el.nodeName !== 'HTML' &&\n        el.nodeName !== 'BODY' &&\n        'classList' in el &&\n        'contains' in el.classList\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n\n      if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {\n        return true;\n      }\n\n      if (tagName === 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n\n      hadKeyboardEvent = true;\n    }\n\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (\n        e.target.classList.contains('focus-visible') ||\n        e.target.hasAttribute('data-focus-visible-added')\n      ) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {\n          hadFocusVisibleRecently = false;\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n    function onVisibilityChange(e) {\n      if (document.visibilityState === 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n        addInitialPointerMoveListeners();\n      }\n    }\n\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    }\n\n    // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n\n    addInitialPointerMoveListeners();\n\n    // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true);\n\n    // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n      document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n  }\n\n  // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n    // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n    var event;\n\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n\n    window.dispatchEvent(event);\n  }\n\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n\n})));\n"],"names":["obj","key","value","defineProperty","enumerable","configurable","writable","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Promise","document","readyState","addEventListener","resolve","array","Array","from","Set","navigator","userAgent","includes","valueA","valueB","el","directive","tagName","toLowerCase","warn","content","childElementCount","subject","replace","match","char","toUpperCase","callback","node","firstElementChild","nextElementSibling","func","wait","timeout","context","this","args","later","setTimeout","handleError","expression","error","isTesting","assign","cb","catch","e","dataContext","additionalHelperVariables","tryCatch","call","Function","values","AsyncFunction","getPrototypeOf","async","constructor","methodReference","xAttrRE","attr","name","replaceAtAndColonWithStandardSyntax","test","component","type","directives","attributes","isXAttr","map","parseHtmlAttribute","spreadDirective","spreadObject","saferEval","$data","concat","entries","sortDirectives","directiveOrder","sort","a","b","typeA","indexOf","typeB","normalizedName","typeMatch","valueMatch","modifiers","attrName","startsWith","classList","filterFn","Boolean","split","TRANSITION_TYPE_IN","TRANSITION_TYPE_OUT","TRANSITION_CANCELLED","show","reject","forceSkip","__x_transition","attrs","getXAttrs","showAttr","settingBothSidesOfTransition","index","some","hide","showCallback","duration","modifierValue","origin","first","opacity","scale","second","hideCallback","fallback","rawValue","isNumeric","join","hook1","hook2","styleValues","cancel","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","[object Object]","transitionProperty","trim","transitionDuration","transitionTimingFunction","ensureStringExpression","evaluateReturnExpression","convertClassStringToArray","find","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","add","remove","finish","once","isConnected","cleanup","nextFrame","start","during","requestAnimationFrame","Number","getComputedStyle","animationDuration","end","isArray","isNaN","called","templateEl","initialUpdate","extraVars","iteratorNames","parseForExpression","items","evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement","currentEl","item","iterationScopeVariables","getIterationScopeVariables","currentKey","generateKeyForIteration","nextEl","lookAheadForMatchingKeyedElementAndMoveItIfFound","__x_for_key","__x_for","updateElements","addElementInLoopAfterCurrentEl","initializeElements","forIteratorRE","stripParensRE","forAliasRE","inMatch","String","res","iteratorMatch","collection","scopeVariables","_objectSpread2","bindKeyAttribute","ifAttribute","clone","importNode","parentElement","insertBefore","tmpNextEl","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","attrType","Alpine","ignoreFocusedForValueBinding","activeElement","isSameNode","checked","checkedAttrLooseCompare","val","setAttribute","arrayUnique","classNames","className","newClasses","camelCase","removeAttribute","setIfChanged","getAttribute","arrayWrappedValue","value2","options","selected","option","text","output","textContent","innerHTML","display","__x_is_shown","removeProperty","handle","showDirectiveLastElement","contains","executeAndClearRemainingShowDirectiveStack","showDirectiveStack","expressionResult","elementHasAlreadyBeenAdded","__x_inserted_me","event","passive","handler","listenerTarget","offsetWidth","offsetHeight","removeEventListener","window","body","isKeyEvent","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","runListenerHandler","then","nextModifier","debounce","evaluateCommandExpression","$event","keyModifiers","debounceIndex","splice","keyToModifier","selectedSystemKeyModifiers","modifier","kebabCase","rightSideOfExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","newValue","safeParseNumber","el2","multiple","selectedOptions","number","parseFloat","create","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","hasOwnProperty","ArrayPush","ArrayConcat","ArrayMap","prototype","proxyToValueMap","WeakMap","proxy","set","unwrap","replicaOrAny","get","membrane","valueIsObservable","getProxy","descriptor","shadowTarget","originalTarget","wrapDescriptor","wrapValue","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","isUndefined","shadowDescriptor","originalDescriptor","unwrapDescriptor","getReadOnlyProxy","wrapReadOnlyValue","isObject","ObjectDotPrototype","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","valueDistortion","defaultValueIsObservable","objectGraph","isFunction","unwrappedValue","distorted","o","getReactiveState","readOnly","reactive","p","distortedValue","reactiveState","reactiveHandler","ReactiveProxyHandler","Proxy","createShadowTarget","readOnlyHandler","ReadOnlyHandler","data","mutationCallback","ReactiveMembrane","observable","unwrappedData","copy","componentForClone","$el","dataAttr","dataExpression","initExpression","dataExtras","canonicalComponentElementReference","magicProperties","unobservedData","getUnobservedData","wrapDataInObservable","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","watchers","$watch","property","onBeforeComponentInitializeds","pauseReactivity","listenForNewElementsToInitialize","onComponentInitializeds","unwrap$1","self2","updateDom","wrap","dotNotationParts","fullDotNotationKey","reduce","comparisonData","part","is","initializeComponentCallback","__x","rootEl","walkAndSkipNestedComponents","initializeElement","Component","executeAndClearNextTickStack","shouldRegisterListeners","registerListeners","resolveBoundAttributes","updateElement","shift","reverse","promiseChain","promise","$dispatch","getDispatchFunction","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","observerOptions","childList","subtree","MutationObserver","mutations","closestParentComponent","closest","attributeName","xAttr","rawData","addedNodes","nodeType","matches","observe","ref","version","pauseMutationObserver","domReady","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","newEl","addMagicProperty","onComponentInitialized","onBeforeComponentInitialized","deferLoadingAlpine","factory","scope","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesAllowlist","search","url","tel","email","password","date","month","week","time","datetime","datetime-local","nodeName","isContentEditable","metaKey","altKey","ctrlKey","isValidFocusTarget","focusTriggersKeyboardModality","clearTimeout","visibilityState","onInitialPointerMove","onKeyDown","onPointerDown","onVisibilityChange","onFocus","onBlur","Node","DOCUMENT_FRAGMENT_NODE","host","DOCUMENT_NODE","documentElement","applyFocusVisiblePolyfill","createEvent","initCustomEvent"],"mappings":"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"}